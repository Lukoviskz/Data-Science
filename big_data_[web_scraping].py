# -*- coding: utf-8 -*-
"""Big Data [Web Scraping].ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z8-Sn9vLeIWWGJ25YgCJi0QWgHz2t6bW
"""

!pip install rdflib



###### Código de Web Scraping - Link######
import requests
from bs4 import BeautifulSoup

# Faz uma solicitação HTTP para uma página da web
url = 'https://store.steampowered.com'
response = requests.get(url)

# Verifica se a solicitação foi bem-sucedida
if response.status_code == 200:
    # Analisa o conteúdo HTML da página
    soup = BeautifulSoup(response.content, 'html.parser')

    # Exemplo: Encontrando todos os links na página
    links = soup.find_all('a')
    for link in links:
        print(link.get('href'))
else:
    print(f"Erro ao acessar a página. Código de status: {response.status_code}")

###### Código de Web Scraping - Tabelas######
import requests
from bs4 import BeautifulSoup

# Faz uma solicitação HTTP para a página da Wikipedia
url = 'https://pt.wikipedia.org/wiki/Lista_de_jogos_eletrônicos_mais_vendidos'
response = requests.get(url)

# Verifica se a solicitação foi bem-sucedida
if response.status_code == 200:
    # Analisa o conteúdo HTML da página
    soup = BeautifulSoup(response.content, 'html.parser')

    # Encontra a tabela
    table = soup.find('table', class_='wikitable')

    # Itera sobre as linhas da tabela
    for row in table.find_all('tr')[1:]:  # Ignora o cabeçalho
        columns = row.find_all('td')
        if len(columns) >= 2:
            T = columns[0].text.strip()
            P = columns[1].text.strip()
            E = columns[5].text.strip()
            print(f"Nome: [{T}], Publisher: [{E}], Cópias Vendidas: [{P}]")
else:
    print(f"Erro ao acessar a página. Código de status: {response.status_code}")

from rdflib import Graph, URIRef, Literal

# Crie um novo grafo RDF
g = Graph()

# Defina alguns recursos (sujeitos e objetos)
steam_uri = URIRef("https://store.steampowered.com/")
game_uri = URIRef("https://store.steampowered.com/app/1091500/Cyberpunk_2077/")

# Adicione declarações sobre o jogo e o site Steam
g.add((game_uri, URIRef("https://schema.org/name"), Literal("Cyberpunk 2077")))
g.add((game_uri, URIRef("https://schema.org/url"), game_uri))
g.add((game_uri, URIRef("https://schema.org/provider"), steam_uri))

# Consulte o grafo para obter informações sobre o jogo e o site
for s, p, o in g:
    print(f"{s} {p} {o}")

# Salve o grafo em um arquivo
g.serialize("jogos.rdf", format="xml")